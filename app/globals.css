@import "tailwindcss";
@import "tw-animate-css";

@custom-variant dark (&:is(.dark *));

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-barlow-condensed);
  --color-sidebar-ring: var(--sidebar-ring);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar: var(--sidebar);
  --color-chart-5: var(--chart-5);
  --color-chart-4: var(--chart-4);
  --color-chart-3: var(--chart-3);
  --color-chart-2: var(--chart-2);
  --color-chart-1: var(--chart-1);
  --color-ring: var(--ring);
  --color-input: var(--input);
  --color-border: var(--border);
  --color-destructive: var(--destructive);
  --color-accent-foreground: var(--accent-foreground);
  --color-accent: var(--accent);
  --color-muted-foreground: var(--muted-foreground);
  --color-muted: var(--muted);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-secondary: var(--secondary);
  --color-primary-foreground: var(--primary-foreground);
  --color-primary: var(--primary);
  --color-popover-foreground: var(--popover-foreground);
  --color-popover: var(--popover);
  --color-card-foreground: var(--card-foreground);
  --color-card: var(--card);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);

  /* Bridge Brand Colors */
  --color-bridge-primary: #4A90E2;
  --color-bridge-primary-light: #B3D4FF;
  --color-bridge-primary-dark: #1E6BD6;
  --color-bridge-accent: #EBD8B7;
  --color-bridge-neutral-bg: #F9FAFB;
  --color-bridge-text-primary: #1A1A1A;
  --color-bridge-text-secondary: #4A5568;
  --color-bridge-success: #16A34A;
  --color-bridge-error: #DC2626;

  /* Tailwind-compatible aliases for CLAUDE.md spec colors */
  --color-bridge-surface: #F1F3F5; /* Mist Gray - for cards, modals, elevated containers */
  --color-bridge-border: #D6D9DE; /* Cloud Gray - for borders */
  --color-bridge-blue: #4A90E2; /* Sky Blue - primary brand color */
  --color-bridge-blue-light: #B3D4FF; /* Light Sky - hover, focus states */
  --color-bridge-text: #1A1A1A; /* Charcoal - primary text */
  --color-bridge-text-muted: #4A5568; /* Slate - secondary text */

  /* Background system aliases */
  --color-bridge-background: #F9FAFB; /* Off White - default background */
  --color-bridge-background-alt: #F1F3F5; /* Mist Gray - alternate background */

  /* Subtle White Gradient System - for flowing page backgrounds */
  --color-bridge-gradient-1: #FEFEFE; /* Pure white */
  --color-bridge-gradient-2: #FCFCFC; /* Subtle cool white */
  --color-bridge-gradient-3: #FAFAFA; /* Light neutral */
  --color-bridge-gradient-4: #F8F8F8; /* Soft white */
  --color-bridge-gradient-5: #F5F5F5; /* Warm light gray */

  /* Bridge Shadows */
  --shadow-bridge: 0 2px 8px 0 rgb(0 0 0 / 0.06);
  --shadow-bridge-hover: 0 4px 12px 0 rgb(0 0 0 / 0.12);
}

:root {
  --radius: 0.625rem;
  --background: #F9FAFB; /* Bridge Off White */
  --foreground: #1A1A1A; /* Bridge Charcoal */
  --card: #FFFFFF;
  --card-foreground: #1A1A1A;
  --popover: #FFFFFF;
  --popover-foreground: #1A1A1A;
  --primary: #4A90E2; /* Bridge Sky Blue */
  --primary-foreground: #FFFFFF;
  --secondary: #F1F3F5; /* Bridge Mist Gray */
  --secondary-foreground: #1A1A1A;
  --muted: #F1F3F5;
  --muted-foreground: #4A5568; /* Bridge Slate */
  --accent: #EBD8B7; /* Bridge Warm Sand */
  --accent-foreground: #1A1A1A;
  --destructive: #DC2626; /* Bridge Rose */
  --border: #D6D9DE; /* Bridge Cloud Gray */
  --input: #D6D9DE;
  --ring: #4A90E2;
  --chart-1: #4A90E2;
  --chart-2: #B3D4FF;
  --chart-3: #EBD8B7;
  --chart-4: #16A34A;
  --chart-5: #1E6BD6;
  --sidebar: #FFFFFF;
  --sidebar-foreground: #1A1A1A;
  --sidebar-primary: #4A90E2;
  --sidebar-primary-foreground: #FFFFFF;
  --sidebar-accent: #F1F3F5;
  --sidebar-accent-foreground: #1A1A1A;
  --sidebar-border: #D6D9DE;
  --sidebar-ring: #4A90E2;
}

.dark {
  --background: oklch(0.145 0 0);
  --foreground: oklch(0.985 0 0);
  --card: oklch(0.205 0 0);
  --card-foreground: oklch(0.985 0 0);
  --popover: oklch(0.205 0 0);
  --popover-foreground: oklch(0.985 0 0);
  --primary: oklch(0.922 0 0);
  --primary-foreground: oklch(0.205 0 0);
  --secondary: oklch(0.269 0 0);
  --secondary-foreground: oklch(0.985 0 0);
  --muted: oklch(0.269 0 0);
  --muted-foreground: oklch(0.708 0 0);
  --accent: oklch(0.269 0 0);
  --accent-foreground: oklch(0.985 0 0);
  --destructive: oklch(0.704 0.191 22.216);
  --border: oklch(1 0 0 / 10%);
  --input: oklch(1 0 0 / 15%);
  --ring: oklch(0.556 0 0);
  --chart-1: oklch(0.488 0.243 264.376);
  --chart-2: oklch(0.696 0.17 162.48);
  --chart-3: oklch(0.769 0.188 70.08);
  --chart-4: oklch(0.627 0.265 303.9);
  --chart-5: oklch(0.645 0.246 16.439);
  --sidebar: oklch(0.205 0 0);
  --sidebar-foreground: oklch(0.985 0 0);
  --sidebar-primary: oklch(0.488 0.243 264.376);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.269 0 0);
  --sidebar-accent-foreground: oklch(0.985 0 0);
  --sidebar-border: oklch(1 0 0 / 10%);
  --sidebar-ring: oklch(0.556 0 0);

  /* Bridge Palette Dark Mode Overrides */
  --color-bridge-background: #0E0F11;
  --color-bridge-surface: #1A1C1F;
  --color-bridge-border: #2A2E33;
  --color-bridge-blue: #5DA0F4;
  --color-bridge-blue-light: #9EC5FF;
  --color-bridge-text: #F4F4F4;
  --color-bridge-text-muted: #A1A1AA;
}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
  }
}

@layer utilities {
  .animate-scroll {
    animation: scroll var(--animation-duration, 40s) var(--animation-direction, forwards) linear infinite;
  }

  @keyframes scroll {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(-50%);
    }
  }

  /* Vertical conveyor keyframes */
  @keyframes scrollY {
    0% {
      transform: translateY(0%);
    }
    100% {
      transform: translateY(-50%);
    }
  }

  /* Blinking caret for typed line */
  @keyframes caret {
    0%, 49% {
      opacity: 1;
    }
    50%, 100% {
      opacity: 0;
    }
  }

  /* Fade in animation for sections */
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Subtle grain background texture */
  .bg-grain {
    background-image: radial-gradient(rgba(0, 0, 0, 0.015) 1px, transparent 1px);
    background-size: 8px 8px;
  }

  /* Radial gradient using bridge-blue for decorative backgrounds */
  .bg-bridge-radial-accent {
    background-image: radial-gradient(ellipse at bottom right, rgb(60 126 219 / 0.05), transparent 50%);
  }

  /* Network visualization animations */
  .perspective-1000 {
    perspective: 1000px;
  }

  .network-container {
    transform-style: preserve-3d;
    animation: networkRotate 20s ease-in-out 5s infinite;
  }

  @keyframes networkRotate {
    0%, 30% {
      transform: rotateY(0deg) rotateX(0deg);
    }
    50% {
      transform: rotateY(360deg) rotateX(15deg);
    }
    70%, 100% {
      transform: rotateY(360deg) rotateX(0deg);
    }
  }

  .network-visualization {
    filter: drop-shadow(0 2px 8px rgba(60, 126, 219, 0.15));
  }

  .network-node {
    transform-origin: center;
    animation: networkNodeGrow 0.6s ease-out forwards, networkNodePulse 3s ease-in-out infinite;
    opacity: 0;
    transform: scale(0);
  }

  @keyframes networkNodeGrow {
    0% {
      opacity: 0;
      transform: scale(0);
    }
    60% {
      transform: scale(1.2);
    }
    100% {
      opacity: 1;
      transform: scale(1);
    }
  }

  @keyframes networkNodePulse {
    0%, 100% {
      opacity: 0.7;
    }
    50% {
      opacity: 1;
    }
  }

  .network-line {
    stroke-dasharray: 100;
    stroke-dashoffset: 100;
    animation: networkLineGrow 0.8s ease-out forwards;
    opacity: 0;
  }

  @keyframes networkLineGrow {
    0% {
      stroke-dashoffset: 100;
      opacity: 0;
    }
    100% {
      stroke-dashoffset: 0;
      opacity: 0.25;
    }
  }

  /* Ripple effect animations */
  .ripple-visualization {
    filter: drop-shadow(0 2px 12px rgba(60, 126, 219, 0.2));
  }

  .ripple-wave {
    animation: rippleExpand 3s ease-out infinite;
  }

  @keyframes rippleExpand {
    0% {
      r: 10;
      opacity: 0.6;
      stroke-width: 3;
    }
    50% {
      opacity: 0.3;
      stroke-width: 2;
    }
    100% {
      r: 60;
      opacity: 0;
      stroke-width: 1;
    }
  }

  .ripple-node {
    animation: rippleNodePulse 3s ease-in-out infinite;
  }

  .ripple-node[data-ring="1"] {
    animation: rippleNodePulse 3s ease-in-out 0.4s infinite;
  }

  .ripple-node[data-ring="2"] {
    animation: rippleNodePulse 3s ease-in-out 0.8s infinite;
  }

  @keyframes rippleNodePulse {
    0%, 100% {
      opacity: 0.3;
      transform: scale(1);
    }
    15% {
      opacity: 1;
      transform: scale(1.3);
    }
    30% {
      opacity: 0.6;
      transform: scale(1);
    }
  }

  /* Community Ring Animation - Gentle continuous rotation */
  .community-ring {
    filter: drop-shadow(0 2px 12px rgba(60, 126, 219, 0.15));
  }

  .rotate-people {
    animation: rotateRing 20s linear infinite;
    transform-origin: 80px 60px;
  }

  @keyframes rotateRing {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }

  /* Extending and retracting connection lines */
  .extending-line {
    animation: extendRetractLine 4s ease-in-out infinite;
  }

  @keyframes extendRetractLine {
    0% {
      stroke-dashoffset: var(--line-length);
      opacity: 0;
    }
    /* Extend over 1.5s */
    37.5% {
      stroke-dashoffset: 0;
      opacity: 0.3;
    }
    /* Hold for 1s */
    62.5% {
      stroke-dashoffset: 0;
      opacity: 0.3;
    }
    /* Retract over 1s */
    87.5% {
      stroke-dashoffset: var(--line-length);
      opacity: 0;
    }
    /* Pause 0.5s */
    100% {
      stroke-dashoffset: var(--line-length);
      opacity: 0;
    }
  }

  /* Network Pulse Animation - Calm, subtle expansion and retraction */
  .network-pulse {
    filter: drop-shadow(0 2px 16px rgba(60, 126, 219, 0.2)) drop-shadow(0 0 8px rgba(60, 126, 219, 0.1));
  }

  /* Pulse wave - expands to 60px radius, holds, retracts, waits */
  .pulse-wave {
    animation: networkPulseWave 20s cubic-bezier(0.4, 0.0, 0.2, 1) infinite;
  }

  @keyframes networkPulseWave {
    0% {
      r: 0;
      opacity: 0;
    }
    /* Expand over 4s with smooth easing */
    40% {
      r: 60;
      opacity: 0.35;
    }
    /* Hold for 2s (ends at 6s) for visual appreciation */
    60% {
      r: 60;
      opacity: 0.25;
    }
    /* Retract over 2s (ends at 8s) */
    80% {
      r: 0;
      opacity: 0;
    }
    /* Pause 2s before restart */
    100% {
      r: 0;
      opacity: 0;
    }
  }

  /* Outer dots - fade in as pulse passes, stay lit, fade out as pulse retracts */
  .outer-dot {
    animation: networkOuterDot 20s cubic-bezier(0.4, 0.0, 0.2, 1) infinite;
  }

  @keyframes networkOuterDot {
    0% {
      opacity: 0;
      transform: scale(0.8);
    }
    /* Gradual fade in when pulse reaches (timing set per dot via delay) */
    2% {
      opacity: 0;
      transform: scale(0.8);
    }
    4% {
      opacity: 0.9;
      transform: scale(1);
    }
    /* Stay visible until hold phase ends (6s = 60%) */
    60% {
      opacity: 0.9;
      transform: scale(1);
    }
    /* Gradual fade out as pulse retracts */
    70% {
      opacity: 0.5;
      transform: scale(0.95);
    }
    80% {
      opacity: 0;
      transform: scale(0.8);
    }
    100% {
      opacity: 0;
      transform: scale(0.8);
    }
  }

  /* Connection lines - draw in 0.3s as dots light up, stay, retract with pulse */
  .connection-line {
    animation: networkConnectionLine 20s cubic-bezier(0.4, 0.0, 0.2, 1) infinite;
  }

  @keyframes networkConnectionLine {
    0% {
      stroke-dashoffset: var(--line-length);
      opacity: 0;
    }
    /* Gradual line draw when dot lights up (timing set via delay) */
    2% {
      opacity: 0;
    }
    4% {
      stroke-dashoffset: 0;
      opacity: 0.35;
    }
    /* Stay visible until hold ends (6s = 60%) */
    60% {
      stroke-dashoffset: 0;
      opacity: 0.35;
    }
    /* Gradual retract with pulse */
    70% {
      stroke-dashoffset: 0;
      opacity: 0.2;
    }
    80% {
      stroke-dashoffset: var(--line-length);
      opacity: 0;
    }
    100% {
      stroke-dashoffset: var(--line-length);
      opacity: 0;
    }
  }
}

/* Motion preferences */
@media (prefers-reduced-motion: reduce) {
  .motion-safe\:animate-none {
    animation: none !important;
  }

  .motion-safe\:animate-scrollY {
    animation: none !important;
  }

  .network-container {
    animation: none !important;
  }

  .network-node {
    animation: networkNodePulse 3s ease-in-out infinite !important;
    opacity: 0.7 !important;
    transform: scale(1) !important;
  }

  .network-line {
    stroke-dasharray: none !important;
    stroke-dashoffset: 0 !important;
    animation: none !important;
    opacity: 0.25 !important;
  }

  .ripple-wave {
    animation: none !important;
    opacity: 0.2 !important;
  }

  .ripple-node {
    animation: none !important;
    opacity: 0.5 !important;
  }
}
